%% Import datacontpol data from text file after running before ISP subtraction
% Script for importing data from the following text file:
%
%    filename: C:\Users\Cbilinski\Dropbox\Astrophysics\Projects\GradSchool\TypeIInsSNSPOL\data\data_contpol.txt
%
% Auto-generated by MATLAB on 23-Mar-2021 11:57:40

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 50);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["name", "tel", "inst", "date", "reldate_peak", "p1", "p1_sig", "t1", "t1_sig", "q1", "q1_sig", "u1", "u1_sig", "lambda1", "p2", "p2_sig", "t2", "t2_sig", "q2", "q2_sig", "u2", "u2_sig", "lambda2", "pNHa", "pNHa_sig", "tNHa", "tNHa_sig", "qNHa", "qNHa_sig", "uNHa", "uNHa_sig", "lambdaNHa", "pNHb", "pNHb_sig", "tNHb", "tNHb_sig", "qNHb", "qNHb_sig", "uNHb", "uNHb_sig", "lambdaNHb", "pNHe", "pNHe_sig", "tNHe", "tNHe_sig", "qNHe", "qNHe_sig", "uNHe", "uNHe_sig", "lambdaNHe"];
opts.VariableTypes = ["string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.LeadingDelimitersRule = "ignore";

% Specify variable properties
opts = setvaropts(opts, ["name", "tel", "inst", "date"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["name", "tel", "inst", "date"], "EmptyFieldRule", "auto");

% Import the data
datacontpol = readtable("C:\Users\Cbilinski\Dropbox\Astrophysics\Projects\GradSchool\TypeIInsSNSPOL\data\data_contpol.txt", opts);

%% Clear temporary variables
clear opts

%constants
lowbound = 4400;
uppbound = 7000;


%directories
dataoutputdirectory = 'C:\Users\Cbilinski\Dropbox\Astrophysics\Projects\GradSchool\TypeIInsSNSPOL\data\';
figuredirectory = 'c:\Users\Cbilinski\Desktop\Figures\';
latextabledirectory = 'C:\Users\Cbilinski\Desktop\Figures\LatexTables\';

%QU PREDICTION narrow
%calculate q and u prediction values based on narrow core

%fit Serkowski (with K as a fit constant too) to the latest SN 2017gas data
Serkowskitemplate_indx = find(strtrim(string(char(data.description))) == "sn2017gas 2017-12-22 MMT comb");
lambdamax_fits = fit_Serkowski_lambdamax_fit(data(Serkowskitemplate_indx).description,100*data(Serkowskitemplate_indx).q((data(Serkowskitemplate_indx).wavedez>4500)),100*data(Serkowskitemplate_indx).u((data(Serkowskitemplate_indx).wavedez>4500)),data(Serkowskitemplate_indx).wavedez((data(Serkowskitemplate_indx).wavedez>4500)));
lambdamax_fromgas = lambdamax_fits(3);
%K_fromCikota = -1.13;

%lambdamax and K from base serkowski fit (maybe use external data instead? other ideas to consider)
%lambdamax_fromgas = 5920.7;
%K_fromgas = 5.5649;
%old values, now actually more like lambdamax = 6.520742846987899e+03


%calculate narrow prediction values and Serkowski fits from them
for i = 1:size(data,2)
	%narrow math
	%q3 * Ftotal = q_pred * F_Halpha + q2 * Fcont
	%q_pred = (q3 * Ftotal - q2 * Fcont) / F_Halpha
	data(i).qpred_narrow_Halpha = ( 100*datacontpol.qNHa(i) * (data(i).EQW_Halpha_narrowcore+data(i).wavrange_Halpha_narrowcore) - 100*datacontpol.q2(i) * data(i).wavrange_Halpha_narrowcore ) / ( data(i).EQW_Halpha_narrowcore );
	data(i).upred_narrow_Halpha = ( 100*datacontpol.uNHa(i) * (data(i).EQW_Halpha_narrowcore+data(i).wavrange_Halpha_narrowcore) - 100*datacontpol.u2(i) * data(i).wavrange_Halpha_narrowcore ) / ( data(i).EQW_Halpha_narrowcore );

	if(~isempty(data(i).EQW_Hbeta_narrowcore))
		data(i).qpred_narrow_Hbeta = ( 100*datacontpol.qNHb(i) * (data(i).EQW_Hbeta_narrowcore+data(i).wavrange_Hbeta_narrowcore) - 100*datacontpol.q1(i) * data(i).wavrange_Hbeta_narrowcore ) / ( data(i).EQW_Hbeta_narrowcore );
		data(i).upred_narrow_Hbeta = ( 100*datacontpol.uNHb(i) * (data(i).EQW_Hbeta_narrowcore+data(i).wavrange_Hbeta_narrowcore) - 100*datacontpol.u1(i) * data(i).wavrange_Hbeta_narrowcore ) / ( data(i).EQW_Hbeta_narrowcore );
	end
	
	if(~isempty(data(i).EQW_HeI5876_narrowcore))
		data(i).qpred_HeI5876 = ( 100*datacontpol.qNHe(i) * (data(i).EQW_HeI5876_narrowcore+data(i).wavrange_HeI5876_narrowcore) - 100*datacontpol.q1(i) * data(i).wavrange_HeI5876_narrowcore ) / ( data(i).EQW_HeI5876_narrowcore );
		data(i).upred_HeI5876 = ( 100*datacontpol.uNHe(i) * (data(i).EQW_HeI5876_narrowcore+data(i).wavrange_HeI5876_narrowcore) - 100*datacontpol.u1(i) * data(i).wavrange_HeI5876_narrowcore ) / ( data(i).EQW_HeI5876_narrowcore );
		%only want to calculate ISPfitvals for objects with depolarization
		[data(i).ISPfitvals] = fit_Serkowski(data(i).description,data(i).wavedez,[data(i).qpred_narrow_Halpha],[data(i).upred_narrow_Halpha],[datacontpol.lambdaNHa(i)],lambdamax_fromgas);
	end
end

[data(:).ISPfitvals_common] = deal([]);

%match ISP fits to other data sets with the same name, should take the results from the first fit for any particular supernova
for i=1:size(data,2)
	if(~isempty(data(i).ISPfitvals))
		for j = 1:size(data,2)
			if(strcmp(data(i).name,data(j).name))
				if(isempty(data(j).ISPfitvals_common))
					data(j).ISPfitvals_common = data(i).ISPfitvals;
				end
			end
		end
	end
end





%%run ISP sub SPOLPlotter now after determining the ISP fits
%for i = 15
%	if(~isempty(data(i).ISPfitvals_common))
%		if(isempty(data(i).qsig))
%			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'ISPfitvals',[data(i).ISPfitvals_common lambdamax_fromgas],'Halphacorewav',data(i).wavedez(data(i).indx_Halphapeak));
%		else                                                                                                  
%			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'qsig',data(i).qsig,'usig',data(i).usig,'ISPfitvals',[data(i).ISPfitvals_common lambdamax_fromgas],'Halphacorewav',data(i).wavedez(data(i).indx_Halphapeak));
%		end
%	else
%		if(isempty(data(i).qsig))
%			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum);
%		else                                                                                                  
%			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'qsig',data(i).qsig,'usig',data(i).usig);
%		end
%	end
%end







%run ISP sub SPOLPlotter now after determining the ISP fits
for i = 1:size(data,2)
	if(~isempty(data(i).ISPfitvals_common))
		if(isempty(data(i).qsig))
			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'ISPfitvals',[data(i).ISPfitvals_common lambdamax_fromgas],'Halphacorewav',data(i).wavedez(data(i).indx_Halphapeak));
		else                                                                                                  
			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'qsig',data(i).qsig,'usig',data(i).usig,'ISPfitvals',[data(i).ISPfitvals_common lambdamax_fromgas],'Halphacorewav',data(i).wavedez(data(i).indx_Halphapeak));
		end
	else
		if(isempty(data(i).qsig))
			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum);
		else                                                                                                  
			[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'qsig',data(i).qsig,'usig',data(i).usig);
		end
	end
end

%% Import data from text file
% Script for importing data from the following text file:
%
%    filename: C:\Users\Cbilinski\Dropbox\Astrophysics\Projects\GradSchool\TypeIInsSNSPOL\data\data_contpol.txt
%
% Auto-generated by MATLAB on 23-Mar-2021 11:57:40

%% Set up the Import Options and import the data
opts = delimitedTextImportOptions("NumVariables", 50);

% Specify range and delimiter
opts.DataLines = [2, Inf];
opts.Delimiter = " ";

% Specify column names and types
opts.VariableNames = ["name", "tel", "inst", "date", "reldate_peak", "p1", "p1_sig", "t1", "t1_sig", "q1", "q1_sig", "u1", "u1_sig", "lambda1", "p2", "p2_sig", "t2", "t2_sig", "q2", "q2_sig", "u2", "u2_sig", "lambda2", "pNHa", "pNHa_sig", "tNHa", "tNHa_sig", "qNHa", "qNHa_sig", "uNHa", "uNHa_sig", "lambdaNHa", "pNHb", "pNHb_sig", "tNHb", "tNHb_sig", "qNHb", "qNHb_sig", "uNHb", "uNHb_sig", "lambdaNHb", "pNHe", "pNHe_sig", "tNHe", "tNHe_sig", "qNHe", "qNHe_sig", "uNHe", "uNHe_sig", "lambdaNHe"];
opts.VariableTypes = ["string", "string", "string", "string", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double", "double"];

% Specify file level properties
opts.ExtraColumnsRule = "ignore";
opts.EmptyLineRule = "read";
opts.LeadingDelimitersRule = "ignore";

% Specify variable properties
opts = setvaropts(opts, ["name", "tel", "inst", "date"], "WhitespaceRule", "preserve");
opts = setvaropts(opts, ["name", "tel", "inst", "date"], "EmptyFieldRule", "auto");

% Import the data
datacontpol_ISPsub = readtable("C:\Users\Cbilinski\Dropbox\Astrophysics\Projects\GradSchool\TypeIInsSNSPOL\data\data_contpol_ISPsub.txt", opts);

%% Clear temporary variables
clear opts

%list of all SNe we include
snnames_readin = unique(datacontpol.name);

%order SN names by number of epochs
for i=1:length(unique(datacontpol.name))
	data_proc(i).numepochs = size(find(strcmp(datacontpol.name,snnames_readin(i))),1);
	data_proc(i).name = snnames_readin(i);
end
%sort SN and put external data names in too
[tempsort tempsortidx] = sort([data_proc.numepochs],'descend');

data_proc = data_proc(tempsortidx);

for i=1:size(data_proc,2)
	snnames_sorted_mydata(i) = data_proc(i).name
end
snnames_sorted = [snnames_sorted_mydata'
"SN1997eg"
"SN1998S"
"SN2006tf"
"SN2013fs"];

%SN colors
colormatrix_pool = distinguishable_colors(size(snnames_sorted,1));
%markerlist = ['o', '+', '*', '.', 'x', 's', 'd', '^', 'v', '>', '<', 'p', 'h'];
fade_alpha = 0.4;

[darksort darksort_indx] = sort(sum(colormatrix_pool,2));
colormatrix_sorted = colormatrix_pool(darksort_indx,:);

for i = 1:size(colormatrix_sorted,1)
simcolorcount(i) = 0;
colormatrix_symbol_options(i) = "osdph";
	for j = 1:i-1
		colordif(i,j) = abs(colormatrix_sorted(i,1) - colormatrix_sorted(j,1)) + abs(colormatrix_sorted(i,2) - colormatrix_sorted(j,2)) + abs(colormatrix_sorted(i,3) - colormatrix_sorted(j,3));
		if(colordif(i,j)<0.8275)
			simcolorcount(i) = simcolorcount(i)+1;
			colormatrix_symbol_options(i) = erase(colormatrix_symbol_options(i),colormatrix_symbol(j));
		end
	end
	colormatrix_symbol_options_char = char(colormatrix_symbol_options(i));
	colormatrix_symbol(i) = colormatrix_symbol_options_char(1);
end

%test out the colors
figure
for i =1:size(colormatrix_sorted,1)
	hold all
	scatter(i,i,700,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],colormatrix_symbol(i),'filled')
end


%read in EXTERNAL DATA NOW
%this was in contpolplot.m but is now in externaldatareadin.m


%for now
size_outlier_movmedian =[250,250,250,250,250,250,250,150,300,250,250,250,250,250,100,100,100,150,150,150,150,250,150,150,150,250,250,250,250,250,250,250,250,250,250,250,250,250,150,100,150,250,250,250,200,250,250,250,250]
threshold_outlier_movmedian =[0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.1500,0.2500,0.5000,0.5000,0.2500,0.5000,0.5000,0.2500,0.2000,0.2500,0.2000,0.2500,0.3000,0.2500,0.4000,0.4000,0.4000,0.2500,0.2000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.5000,0.2000,0.2000,0.3000,0.5000,0.5000,0.5000,0.3500,0.4000,0.2000,0.5000,0.5000]




%%%%%
%QRSP slope calculations code
%run linear fits and store variable in some file
for i=1:size(data,2)
	outlierfig = figure;
	data(i).description_nows = data(i).description;
	data(i).description_nows(data(i).description_nows == ' ') = [];
	data(i).fit_flux_bounded = data(i).flux(((data(i).wavedez)>lowbound)&((data(i).wavedez)<uppbound));
	
	%size_outlier_movmedian(i) = 250;
	%threshold_outlier_movmedian(i) = 0.5;
	accept_outlierfit(i) = 0;
	while(accept_outlierfit(i) == 0)
		[data(i).fit_flux_bounded_outliersremoved data(i).fit_index_outliers] = rmoutliers(data(i).fit_flux_bounded,'movmedian',size_outlier_movmedian(i),'ThresholdFactor',threshold_outlier_movmedian(i));
		clf
		hold all
		plot(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).fit_flux_bounded_outliersremoved)
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_flux_bounded)
		plot(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).fit_flux_bounded_outliersremoved-0.1*mean(data(i).fit_flux_bounded_outliersremoved))
		%if outliers are not satisfactory, try again with custom cuts
		%ask user input, if 1, proceed, if 0
		
		accept_outlierfit(i) = input('Are outlier fits acceptable? (1/0 for y/n) If no, it will ask for new size and threshold parameters.\n');
		if(accept_outlierfit(i) == 0)
			size_outlier_movmedian(i) = input(['Please input new size_outlier_movmedian parameter.  Past value was ', num2str(size_outlier_movmedian(i)),'.\n']);
			threshold_outlier_movmedian(i) = input(['Please input new threshold_outlier_movmedian parameter.  Past value was ', num2str(threshold_outlier_movmedian(i)),'.\n']);
		end
	end
	
	
	%saveplot
	filename_outliers{i} = strcat(figuredirectory,'qRSPslope\outliers_',data(i).description_nows,'.eps');
	saveas(outlierfig, [filename_outliers{i}], 'epsc');
	eval(['!epstopdf ' filename_outliers{i}]);
	close(outlierfig)

	%if there are two versions of the qRSP,uRSP,p2_opt because an ISP exact q and u were subtracted, store the subtracted fit as the primary value and the nonsubtracted as an additional variable
	if(size(data(i).SPOLPlotter_qRSP,2) == 2)
		%without ISP subtracted, do fits and plot
		data(i).fit_linearqRSP_filtered_noISPsub = fit(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).SPOLPlotter_qRSP{1}(~data(i).fit_index_outliers),'poly1','Robust','Bisquare');
		data(i).fit_linearqRSP_noISPsub = fit(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1},'poly1','Robust','Bisquare');
		fitfigure_noISPsub = figure;
		hold all
		plot(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1})
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP_noISPsub(data(i).SPOLPlotter_wavecut))
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP_filtered_noISPsub(data(i).SPOLPlotter_wavecut))
		%saveplot
		filename_qRSPfit_noISPsub{i} = strcat(figuredirectory,'qRSPslope\qRSP_slopefit_noISPsub_',data(i).description_nows,'.eps');
		saveas(fitfigure_noISPsub, [filename_qRSPfit_noISPsub{i}], 'epsc');
		eval(['!epstopdf ' filename_qRSPfit_noISPsub{i}]);
		close(fitfigure_noISPsub)
		
		%with ISP subtracted, do fits and plot
		data(i).fit_linearqRSP_filtered = fit(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).SPOLPlotter_qRSP{2}(~data(i).fit_index_outliers),'poly1','Robust','Bisquare');
		data(i).fit_linearqRSP = fit(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{2},'poly1','Robust','Bisquare');
		fitfigure = figure;
		hold all
		plot(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{2})
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP(data(i).SPOLPlotter_wavecut))
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP_filtered(data(i).SPOLPlotter_wavecut))
		%saveplot
		filename_qRSPfit{i} = strcat(figuredirectory,'qRSPslope\qRSP_slopefit_',data(i).description_nows,'.eps');
		saveas(fitfigure, [filename_qRSPfit{i}], 'epsc');
		eval(['!epstopdf ' filename_qRSPfit{i}]);
		close(fitfigure)
	else
		%if no ISP subtraction is available, just do it without ISP subtraction
		data(i).fit_linearqRSP_filtered = fit(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).SPOLPlotter_qRSP{1}(~data(i).fit_index_outliers),'poly1','Robust','Bisquare');
		data(i).fit_linearqRSP = fit(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1},'poly1','Robust','Bisquare');
		fitfigure = figure;
		hold all
		plot(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1})
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP(data(i).SPOLPlotter_wavecut))
		plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP_filtered(data(i).SPOLPlotter_wavecut))
		%saveplot
		filename_qRSPfit{i} = strcat(figuredirectory,'qRSPslope\qRSP_slopefit_',data(i).description_nows,'.eps');
		saveas(fitfigure, [filename_qRSPfit{i}], 'epsc');
		eval(['!epstopdf ' filename_qRSPfit{i}]);
		close(fitfigure)
	end
	
	%data(i).fit_linearqRSP_filtered = fit(data(i).SPOLPlotter_wavecut(~data(i).fit_index_outliers),data(i).SPOLPlotter_qRSP{1}(~data(i).fit_index_outliers),'poly1','Robust','Bisquare');
	%data(i).fit_linearqRSP = fit(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1},'poly1','Robust','Bisquare');
	%fitfigure = figure;
	%hold all
	%plot(data(i).SPOLPlotter_wavecut,data(i).SPOLPlotter_qRSP{1})
	%plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP(data(i).SPOLPlotter_wavecut))
	%plot(data(i).SPOLPlotter_wavecut,data(i).fit_linearqRSP_filtered(data(i).SPOLPlotter_wavecut))
	%saveplot
end


%figure
%hist(histtest,15)
%hold all
%
%
%[N,X] = hist(histtest_early,15)
%Bh = bar(X,N,'facecolor',[0.3 0.7 0.2]);




%%set(slopevstimefigure,'PaperUnits','normalized','PaperPosition',[0 0 3 3]);
%%clf
%hold all
%for i=1:size(data,2)
%	%using 10^5 multiplier to reflect % continuum polarization changed (*10^2) per 1000 angstroms (*10^3)
%	hand_scat(i) = scatter(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered.p1,data(i).sizepoint,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),1:3),colormatrix_symbol(strcmp(data(i).name_nows,snnames_sorted)),'filled');
%	hand_err(i) = errorbar(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered.p1,10^5*data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:));
%	set([hand_err(i).Bar, hand_err(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [hand_err(i).Line.ColorData(1:3); 255*fade_alpha])
%	set(hand_err(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [hand_err(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
%end







%print latex contpol table
filename_latex_contpol = strcat(figuredirectory,'latextable_contpol.txt');
for i=1:size(datacontpol,1)
	print_contpoltable_row{i} = [char(datacontpol.name(i)),' & ',num2str(round(datacontpol.reldate_peak(i))),' & ',num2str(round(100*datacontpol.p1(i),2)),'(',num2str(round(100*datacontpol.p1_sig(i),2)),')',' & ',num2str(round(datacontpol.t1(i),1)),'(',num2str(round(abs(datacontpol.t1_sig(i)),1)),')',' & ',num2str(round(100*datacontpol.q1(i),2)),'(',num2str(round(100*datacontpol.q1_sig(i),2)),')',' & ',num2str(round(100*datacontpol.u1(i),2)),'(',num2str(round(100*datacontpol.u1_sig(i),2)),')',' & ',num2str(round(100*datacontpol.p2(i),2)),'(',num2str(round(100*datacontpol.p2_sig(i),2)),')',' & ',num2str(round(datacontpol.t2(i),0)),'(',num2str(round(abs(datacontpol.t2_sig(i)),1)),')',' & ',num2str(round(100*datacontpol.q2(i),2)),'(',num2str(round(100*datacontpol.q2_sig(i),2)),')',' & ',num2str(round(100*datacontpol.u2(i),2)),'(',num2str(round(100*datacontpol.u2_sig(i),2)),') \\']
	%output latex table code to file
	dlmwrite(filename_latex_contpol,print_contpoltable_row{i},'-append','delimiter','');
end








%changed JJ data manually here ??? dont know what this was anymore



%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%plotting setup code
beta_sizepoint = (1000-5*max(datacontpol_ISPsub.p1)/min(datacontpol_ISPsub.p1)) / (1-max(datacontpol_ISPsub.p1)/min(datacontpol_ISPsub.p1));
alpha_sizepoint = (5 - beta_sizepoint) / min(datacontpol_ISPsub.p1);


for i=1:size(data,2)
	data(i).name_nows = data(i).name;
	data(i).name_nows(data(i).name_nows == ' ') = [];
	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
	%set range via fraction of max and change sizepoint in scatter
	data(i).sizepoint = datacontpol_ISPsub.p1(i)*alpha_sizepoint + beta_sizepoint;
end

%find a matching index for each snname for the legend
i=1;
while i<(size(snnames_sorted_mydata,2)+1)
	for j=1:size(data,2)
		if(snnames_sorted_mydata(i) == data(j).name_nows)
			snnames_to_data_match_indx(i) =  j;
			i=i+1;
			break
		end
	end
end

%match ISP values to SN names

for i=1:size(data_proc,2)
	if(strcmp(char(data_proc(i).name),'ASASSN-14il'))
		data_proc(i).ISPlimit_fromNaID = ISP_ASASSN14il;
	elseif(strcmp(char(data_proc(i).name),'M04421'))
		data_proc(i).ISPlimit_fromNaID = ISP_MJ044212;
	elseif(strcmp(char(data_proc(i).name),'PS15cwt'))
		data_proc(i).ISPlimit_fromNaID = ISP_J02331624;
	else
		data_proc(i).ISPlimit_fromNaID = eval((['ISP_' char(data_proc(i).name)]))
	end
end

%maximal polarization prep code
%2nd cell is with ISP sub in popt
for i=1:size(data,2)
	if(size(data(i).SPOLPlotter_popt,2) == 2)
		data(i).popt_mean = mean(100*data(i).SPOLPlotter_popt{2});
		data(i).popt_std = std(100*data(i).SPOLPlotter_popt{2})
	else
		data(i).popt_mean = mean(100*data(i).SPOLPlotter_popt{1});
		data(i).popt_std = std(100*data(i).SPOLPlotter_popt{1})
	end
end

for i=1:size(snnames_sorted_mydata,2)
	data_proc(i).maximalpopt_indx =  find([data.popt_mean] == max([data(snnames_sorted_mydata(i) == strtrim(strrep(string(char(data.name)),'SN ','SN'))).popt_mean]));
	if( (data(data_proc(i).maximalpopt_indx).popt_mean >= 1) && (data(data_proc(i).maximalpopt_indx).popt_std < 1.25) )
		data_proc(i).use_maxpopt = 1;
		data_proc(i).use_closetopeakpopt = 0;
	else
		data_proc(i).closetopeak_sortedpool_dates(:) = sort(abs([data(snnames_sorted_mydata(i) == strtrim(strrep(string(char(data.name)),'SN ','SN'))).reldate_peak]));
		accept_closetopeak(i) = 0;
		exhaust_alldates(i) = 0;
		j=1;
		while( (accept_closetopeak(i) == 0) && (exhaust_alldates(i) == 0))
			if(isempty(find([data.reldate_peak] == data_proc(i).closetopeak_sortedpool_dates(j))))
				data_proc(i).closetopeak_sortedpool_indx(j) = find([data.reldate_peak] == -1*data_proc(i).closetopeak_sortedpool_dates(j));
			else
				data_proc(i).closetopeak_sortedpool_indx(j) = find([data.reldate_peak] == data_proc(i).closetopeak_sortedpool_dates(j));
			end
			
			if(data(data_proc(i).closetopeak_sortedpool_indx(j)).popt_std < 1.25)
				accept_closetopeak(i) = 1;
				if(isempty(find([data.reldate_peak] == data_proc(i).closetopeak_sortedpool_dates(j))))
					data_proc(i).closetopeak_indx = find([data.reldate_peak] == -1*data_proc(i).closetopeak_sortedpool_dates(j));
				else
					data_proc(i).closetopeak_indx = find([data.reldate_peak] == data_proc(i).closetopeak_sortedpool_dates(j));
				end
				data_proc(i).use_maxpopt = 0;
				data_proc(i).use_closetopeakpopt = 1;
			elseif(size(data_proc(i).closetopeak_sortedpool_dates(:),1) > j)
				j=j+1;
			else
				exhaust_alldates(i) = 1;
				data_proc(i).use_maxpopt = 0;
				data_proc(i).use_closetopeakpopt = 0;
			end
		end
	end
end

[data_proc(:).linestyle] = deal(['-']);
%SN 2015da, SN 2011ht, SN 2012ab dashed lines
[data_proc([6 7 9]).linestyle] = deal([':']);


%%compare unsub ISP with sub ISP
%create histograms for comparing slope before and after ISP sub
clf
hold all
for i=1:size(data,2)
histtest(i) = data(i).fit_linearqRSP_filtered.p1;
		if(data(i).reldate_peak < 50)
			histtest_early(i) = data(i).fit_linearqRSP_filtered.p1;
		end
	if(~isempty(data(i).fit_linearqRSP_filtered_noISPsub))
		data(i).fit_linearqRSP_filtered_noISPsub_confint = confint(data(i).fit_linearqRSP_filtered_noISPsub)
		scatter(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered.p1,0.25*data(i).sizepoint,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),1:3),'filled');
		scatter(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered_noISPsub.p1,0.25*data(i).sizepoint,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),1:3),'d','filled');
		histtest_ISPsub(i) = data(i).fit_linearqRSP_filtered.p1;
		histtest_noISP(i) = data(i).fit_linearqRSP_filtered_noISPsub.p1;
	end
end

histtest_ISPsub(histtest_ISPsub == 0) = NaN;
histtest_noISP(histtest_noISP == 0) = NaN;


[h_ks p_ks] = kstest2(histtest_ISPsub,histtest_noISP)










%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%generate Serkowski template plot
SPOLPlotter(data(Serkowskitemplate_indx).wavedez,data(Serkowskitemplate_indx).flux,data(Serkowskitemplate_indx).q,data(Serkowskitemplate_indx).u,data(Serkowskitemplate_indx).ymdplotlabel,data(Serkowskitemplate_indx).reldate_peak,data(Serkowskitemplate_indx).name,[data(Serkowskitemplate_indx).tel ' ' data(Serkowskitemplate_indx).instr],size(data(Serkowskitemplate_indx).contrange,1),data(Serkowskitemplate_indx).contrange,'ISP',data(Serkowskitemplate_indx).ISP,'qsum',data(Serkowskitemplate_indx).qsum,'usum',data(Serkowskitemplate_indx).usum,'qsig',data(Serkowskitemplate_indx).qsig,'usig',data(Serkowskitemplate_indx).usig,'Serkowski_template',lambdamax_fits);
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%

%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%% histogram comparing slope parameters 
fig_histispsub = figure;
set(gcf,'color','w');
set(gcf,'renderer','painters')
colormap jet
set(fig_histispsub,'units','normalized','outerposition',[0 0 0.5 0.8]);
hold all
hist_ISPsub = histogram(10^5*histtest_ISPsub,'BinEdges',[-14:11]/10,'facecolor',[1 1 1],'facealpha',.75,'edgecolor','none');
hist_ISPsub_patch = patch([repelem(hist_ISPsub.BinEdges,2)],[0 repelem(hist_ISPsub.Values,2) 0],[1 1 1])
%hatch(hist_ISPsub_patch,45,[0 0 0],'-',15,3)
hatchfill2(hist_ISPsub_patch,'single','HatchAngle',45,'HatchDensity',30,'HatchColor',[0 0 0],'HatchLineWidth',3)
hist_ISPnosub = histogram(10^5*histtest_noISP,'BinEdges',[-14:11]/10,'facecolor',[0 0 1],'facealpha',.5,'edgecolor','none');
box on
axis([[-1.4 1.1] [0 8]])
set(gca, 'XTick', -1.4:0.2:1.2)
set(gca,'FontSize',20)
leg_patch = patch([-1.35 -1.35 -1.05 -1.05],[7.3 7.8 7.8 7.3],[1 1 1])
hatchfill2(leg_patch,'single','HatchAngle',45,'HatchDensity',30,'HatchColor',[0 0 0],'HatchLineWidth',3)
leg_patch_2 = patch([-1.35 -1.35 -1.05 -1.05],[6.6 7.1 7.1 6.6],[0 0 1],'EdgeColor',[1 1 1],'facealpha',.5)
xlabel({'Intrinsic Polarization Slope Parameter, $S_{p}$';'(\% polarization per 1000 $\AA$)'},'interpreter','latex','FontSize',24,'FontName','CMU Serif Roman')
ylabel('Count','interpreter','latex','FontSize',24,'FontName','CMU Serif Roman')
%lh = legend([hist_ISPsub,hist_ISPnosub],{'ISP subtracted','ISP included'},'Location','NorthWest')
htext = text(-1.04,7.55,'ISP-Corrected' , 'interpreter','LaTex','FontSize',24)
htext = text(-1.04,6.85,'ISP Included' , 'interpreter','LaTex','FontSize',24)
filename_fig_histispsub = strcat(figuredirectory,'TypeIInSPOL_single\HistISPsub');
img_histispsub = getframe(gcf);
imwrite(img_histispsub.cdata,[filename_fig_histispsub, '.jpg'])
%saveas(fig_histispsub, filename_fig_histispsub, 'epsc');
%eval(['!epstopdf ' filename_fig_histispsub]);
close(fig_histispsub)


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%


%%testing spol plotter panels
%i=16;
%[data(i).SPOLPlotter_wavecut data(i).SPOLPlotter_qRSP data(i).SPOLPlotter_uRSP data(i).SPOLPlotter_popt] = SPOLPlotter(data(i).wavedez,data(i).flux,data(i).q,data(i).u,data(i).ymdplotlabel,data(i).reldate_peak,data(i).name,[data(i).tel ' ' data(i).instr],size(data(i).contrange,1),data(i).contrange,'ISP',data(i).ISP,'qsum',data(i).qsum,'usum',data(i).usum,'qsig',data(i).qsig,'usig',data(i).usig,'ISPfitvals',[data(i).ISPfitvals_common lambdamax_fromgas],'Halphacorewav',data(i).wavedez(data(i).indx_Halphapeak));


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%


%read in dessart estimates from screengrab
Desmod_time = [19.8574338
40.9368635
62.0162933
82.790224
103.869654
125.254582
145.112016];

Desmod_p6 = [1.78338762
1.58794788
1.35830619
1.03094463
0.65472313
0.28827362
0.06840391];


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%EQW and FW20M plot
data_names = string({data(:).name_nows});


fig_EQW = figure;
set(gcf,'renderer','painters')
colormap jet
set(fig_EQW,'units','normalized','outerposition',[0 0 0.45 0.95]);

subtightplot(8,1,[1 2 3 4],[0.0,0.0],0.05,0.1)


for i=1:size(snnames_sorted_mydata,2)
	hold all
	sc1(i) = scatter([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).EQW_Halpha],200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
	set(gca,'yscale','log')
	pl(i) = semilogy([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).EQW_Halpha],'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	er1(i) = errorbar([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).EQW_Halpha],[data(find(strcmp(data_names,snnames_sorted(i)))).EQW_Halpha_sig],'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);	
	%er2_ISP(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),ones(size(datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))))).*data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	%set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	%er1(i).CapSize = 8;
	
	%sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
	
end

box on
axis([[-75 550] [10 10000]])
%xlabel('Days Relative to Peak','interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
ylabel('H$\alpha$ Equivalent Width ({\AA})','interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
%set(gca,'yticklabel',{[]})
%set(gca,'xticklabel',{[]})
set(gca,'FontSize',12)

[hleg gleg] = legend(sc1,snnames_sorted_mydata,'Location','northeast','FontSize',14);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
set(gleg_patch, 'Markersize', 16); %// set marker size as desired


subtightplot(8,1,[5 6 7 8],[0.02,0.075],0.05,0.1)
%placeholder estimate for now
vel_FW_err = ((data(1).wavedez(2)-data(1).wavedez(1))/lambdaHalpha)*10^-5 * c;

for i=1:size(snnames_sorted_mydata,2)
	hold all
	sc1(i) = scatter([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).vel_FW],200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
	set(gca,'yscale','log')
	pl(i) = semilogy([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).vel_FW],'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	er1(i) = errorbar([data(find(strcmp(data_names,snnames_sorted(i)))).reldate_peak],[data(find(strcmp(data_names,snnames_sorted(i)))).vel_FW],ones(1,size([data(find(strcmp(data_names,snnames_sorted(i)))).vel_FW],2))*vel_FW_err,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);	
end

box on
axis([[-75 550] [1000 15000]])
xlabel('Days Relative to Peak','interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
ylabel('$V_{20}$, Velocity (km s$^{-1}$) at Full Width 20\% Maximum','interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
%set(gca,'yticklabel',{[]})
%set(gca,'xticklabel',{[]})
set(gca,'FontSize',12)

[hleg gleg] = legend(sc1,snnames_sorted_mydata,'Location','northeast','FontSize',14);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
set(gleg_patch, 'Markersize', 16); %// set marker size as desired


filename_fig_EQW = strcat(figuredirectory,'TypeIInSPOL_single\EQW_FW20M.eps');
saveas(fig_EQW, filename_fig_EQW, 'epsc');
eval(['!epstopdf ' filename_fig_EQW]);
close(fig_EQW)
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%

%%%%%%%%%%
%slope parameter vs time plot and continuum polarization vs time plot
fig_contpolslope = figure;
set(gcf,'renderer','painters')
colormap jet
set(fig_contpolslope,'units','normalized','outerposition',[0 0 0.45 0.95]);
subtightplot(8,1,[6 7 8],[0.0,0.0],0.05,0.1)

%clf
hold all
for i=1:size(data,2)
	%using 10^5 multiplier to reflect % continuum polarization changed (*10^2) per 1000 angstroms (*10^3)
	hand_err(i) = errorbar(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered.p1,abs(10^5*data(i).fit_linearqRSP_filtered_confint(1,1)-10^5*data(i).fit_linearqRSP_filtered.p1),abs(10^5*data(i).fit_linearqRSP_filtered_confint(2,1)-10^5*data(i).fit_linearqRSP_filtered.p1),0,0,'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:));
	hand_scat(i) = scatter(data(i).reldate_peak,10^5*data(i).fit_linearqRSP_filtered.p1,100,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),1:3),colormatrix_symbol(strcmp(data(i).name_nows,snnames_sorted)),'filled');
	set([hand_err(i).Bar, hand_err(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [hand_err(i).Line.ColorData(1:3); 255*fade_alpha])
	set(hand_err(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [hand_err(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
end

box on
axis([[-75 550] [-2.2 0.4]])
line([-500 1000],[0 0],'LineStyle','--','Color',[0 0 0])
xlabel('Days Relative to Peak','interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
ylabel({'Intrinsic Polarization Slope Parameter, $S_{p}$';'(\% polarization per 1000 $\AA$)'},'interpreter','latex','FontSize',14,'FontName','CMU Serif Roman')
%set(gca,'yticklabel',{[]})

subtightplot(8,1,[1 2 3 4 5],[0.01,0.075],0.05,0.1)

for i=1:length(unique(datacontpol.name))
	%days since peak with continuum polarization binned at 5400A
	%special case of dotted line for the really noisy data point and replot it at the limit of the plot
	hold all
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	tempx = datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i))));
	tempy = 100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i))));
	er2_ISP(i) = errorbar(tempx(1),tempy(1),data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%er2_ISP(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),ones(size(datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))))).*data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	set([er2_ISP(i).Bar, er2_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er2_ISP(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er2_ISP(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er2_ISP(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er2_ISP(i).CapSize = 18;
	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er1(i).CapSize = 8;
	if(snnames_sorted(i) == "SN2011ht")
		pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),'--','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	else
		pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	end
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
	des_mod = plot(Desmod_time,Desmod_p6,'--','LineWidth',1,'Color','k');
end

set(gca,'box','on')
set(gca,'xticklabel',{[]})
ylabel('Continuum Polarization (\%) at 5400 $\AA$','interpreter','latex','FontSize',12','FontName','CMU Serif Roman')
axis([[-75 550] [0 6]])
set(gca,'FontSize',12)

[hleg gleg] = legend([sc1 des_mod],[snnames_sorted_mydata 'D15 Model'],'Location','northeast','FontSize',14);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
set(gleg_patch, 'Markersize', 16); %// set marker size as desired
filename_fig_contpol_slope = strcat(figuredirectory,'TypeIInSPOL_single\Contpol_Slope_5400.eps');
saveas(fig_contpolslope, filename_fig_contpol_slope, 'epsc');
eval(['!epstopdf ' filename_fig_contpol_slope]);
close(fig_contpolslope)
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%maximal polarization plot

fig_maximalpol = figure;
set(gcf,'renderer','painters')
colormap jet
set(fig_maximalpol,'units','normalized','outerposition',[0 0 1 1]);
hold all
axis([[4400 7000] [-2 6.1]])
box on

c_i=0;
for i=1:size(snnames_sorted_mydata,2)
	if(data_proc(i).use_maxpopt == 1)
		if(size(data(data_proc(i).maximalpopt_indx).SPOLPlotter_popt,2) == 2)
			p_maximalpol(i) = plot(data(data_proc(i).maximalpopt_indx).SPOLPlotter_wavecut,smooth(100*data(data_proc(i).maximalpopt_indx).SPOLPlotter_popt{2},10),data_proc(i).linestyle,'Color',colormatrix_sorted(i,:),'LineWidth',2);
			c_i=c_i+1;
			c_i_color(i,:) = colormatrix_sorted(i,:);
			p_maximalpol_legnames(i) = string([data(data_proc(i).maximalpopt_indx).name ' Day ' char(num2str(round(data(data_proc(i).maximalpopt_indx).reldate_peak)))]);
		else
			p_maximalpol(i) = plot(data(data_proc(i).maximalpopt_indx).SPOLPlotter_wavecut,smooth(100*data(data_proc(i).maximalpopt_indx).SPOLPlotter_popt{1},10),data_proc(i).linestyle,'Color',colormatrix_sorted(i,:),'LineWidth',2);
			c_i=c_i+1;
			c_i_color(i,:) = colormatrix_sorted(i,:);
			p_maximalpol_legnames(i) = string([data(data_proc(i).maximalpopt_indx).name ' Day ' char(num2str(round(data(data_proc(i).maximalpopt_indx).reldate_peak)))]);
		end
	elseif(data_proc(i).use_closetopeakpopt == 1)
		if(size(data(data_proc(i).closetopeak_indx).SPOLPlotter_popt,2) == 2)
			p_maximalpol(i) = plot(data(data_proc(i).closetopeak_indx).SPOLPlotter_wavecut,smooth(100*data(data_proc(i).closetopeak_indx).SPOLPlotter_popt{2},10),data_proc(i).linestyle,'Color',colormatrix_sorted(i,:),'LineWidth',2);
			c_i=c_i+1;
			c_i_color(i,:) = colormatrix_sorted(i,:);
			p_maximalpol_legnames(i) = string([data(data_proc(i).closetopeak_indx).name ' Day ' char(num2str(round(data(data_proc(i).closetopeak_indx).reldate_peak)))]);
		else
			p_maximalpol(i) = plot(data(data_proc(i).closetopeak_indx).SPOLPlotter_wavecut,smooth(100*data(data_proc(i).closetopeak_indx).SPOLPlotter_popt{1},10),data_proc(i).linestyle,'Color',colormatrix_sorted(i,:),'LineWidth',2);
			c_i=c_i+1;
			c_i_color(i,:) = colormatrix_sorted(i,:);
			p_maximalpol_legnames(i) = string([data(data_proc(i).closetopeak_indx).name ' Day ' char(num2str(round(data(data_proc(i).closetopeak_indx).reldate_peak)))]);
		end
	end
end

set(gca,'FontSize',24)
xlabel('Wavelength ($\mathrm{\AA}$)','interpreter','latex','FontSize',28,'FontName','CMU Serif Roman')
ylabel('Optimal Polarization ($P_{opt}$)','interpreter','latex','FontSize',28,'FontName','CMU Serif Roman')

htext = text(5000,1.6 ,p_maximalpol_legnames(1) , 'interpreter','LaTex','Color',c_i_color(1,:) ,'FontSize',24)
htext = text(5000,5.9 ,p_maximalpol_legnames(2) , 'interpreter','LaTex','Color',c_i_color(2,:) ,'FontSize',24)
htext = text(5000,-0.6,p_maximalpol_legnames(3) , 'interpreter','LaTex','Color',c_i_color(3,:) ,'FontSize',24)
htext = text(5000,1.2 ,p_maximalpol_legnames(4) , 'interpreter','LaTex','Color',c_i_color(4,:) ,'FontSize',24)
htext = text(5000,0.8 ,p_maximalpol_legnames(5) , 'interpreter','LaTex','Color',c_i_color(5,:) ,'FontSize',24)
htext = text(5000,4.1 ,p_maximalpol_legnames(6) , 'interpreter','LaTex','Color',c_i_color(6,:) ,'FontSize',24)
htext = text(5000,-1.0,p_maximalpol_legnames(7) , 'interpreter','LaTex','Color',c_i_color(7,:) ,'FontSize',24)
htext = text(5000,4.9 ,p_maximalpol_legnames(8) , 'interpreter','LaTex','Color',c_i_color(8,:) ,'FontSize',24)
htext = text(5000,4.5,p_maximalpol_legnames(9) , 'interpreter','LaTex','Color',c_i_color(9,:) ,'FontSize',24)
htext = text(5000,-1.4,p_maximalpol_legnames(14), 'interpreter','LaTex','Color',c_i_color(14,:),'FontSize',24)

%[hleg_maximalpol gleg_maximalpol] = legend(p_maximalpol,p_maximalpol_legnames,'FontSize', 24,'Location','NorthEastOutside');
%for i=1:c_i
%	hleg_maximalpol.String{i} = ['\color[rgb]{' num2str(c_i_color(i,:)) '} ' hleg_maximalpol.String{i}]
%end


filename_fig_maximalpol = strcat(figuredirectory,'TypeIInSPOL_single\MaximalPolarization.eps');
saveas(fig_maximalpol, filename_fig_maximalpol, 'epsc');
eval(['!epstopdf ' filename_fig_maximalpol]);
close(fig_maximalpol)

%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%


%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%Polarized flux plot
for i=1:size(data,2)
	fig_polarizedflux(i) = figure;
	set(gcf,'renderer','painters')
	colormap jet
	set(fig_polarizedflux(i),'units','normalized','outerposition',[0 0 1 1]);
	box on
	hold all
	
	%need scale factor calculated for plot
	flux_mean(i) = mean(data(i).fit_flux_bounded(data(i).SPOLPlotter_wavecut>6000 & data(i).SPOLPlotter_wavecut<6300));
	f_flux = plot(data(i).SPOLPlotter_wavecut,data(i).fit_flux_bounded,'LineWidth',3);
	if(size(data(i).SPOLPlotter_popt,2) == 2)
		pflux_mean(i) = mean(data(i).fit_flux_bounded(data(i).SPOLPlotter_wavecut>6000 & data(i).SPOLPlotter_wavecut<6300).*100.*data(i).SPOLPlotter_popt{2}(data(i).SPOLPlotter_wavecut>6000 & data(i).SPOLPlotter_wavecut<6300));
		data(i).pflux_scaled = data(i).fit_flux_bounded.*100.*data(i).SPOLPlotter_popt{2}.*flux_mean(i)./pflux_mean(i);
		f_pflux = plot(data(i).SPOLPlotter_wavecut,smooth(data(i).pflux_scaled,1),'LineWidth',3);
	else
		pflux_mean(i) = mean(data(i).fit_flux_bounded(data(i).SPOLPlotter_wavecut>6000 & data(i).SPOLPlotter_wavecut<6300).*100.*data(i).SPOLPlotter_popt{1}(data(i).SPOLPlotter_wavecut>6000 & data(i).SPOLPlotter_wavecut<6300));
		data(i).pflux_scaled = data(i).fit_flux_bounded.*100.*data(i).SPOLPlotter_popt{1}.*flux_mean(i)./pflux_mean(i);
		f_pflux = plot(data(i).SPOLPlotter_wavecut,smooth(data(i).pflux_scaled,1),'LineWidth',3);
	end
	
	set(gca,'FontSize',40)
	htext = text(5000,1.3*max(data(i).fit_flux_bounded),data(i).name,'interpreter','Latex','Color', 'blue','FontSize',44)
	htext = text(5000,1.15*max(data(i).fit_flux_bounded),['Day ', num2str(round(data(i).reldate_peak))],'interpreter','Latex','Color', 'blue','FontSize',44)
	axis([[4400 7000] [0 1.4*max(data(i).fit_flux_bounded)]])
	%used to use (1/1.4)*min(data(i).fit_flux_bounded) for the ymin bound before, but changed to show 0
	legend([f_flux,f_pflux],{'Flux', 'Polarized Flux'})
	xlabel('Wavelength ($\mathrm{\AA}$)','interpreter','latex','FontSize',46,'FontName','CMU Serif Roman')
	ylabel('$F_{\lambda}$(Scaled)','interpreter','latex','FontSize',46,'FontName','CMU Serif Roman')
	ytics = yticks;
	if(ytics(1)~=0)
		ytics = [0 ytics];
	end
	yticks(ytics);
	filename_fig_polarizedflux = strcat(figuredirectory,'polarizedflux\',data(i).name_nows,num2str(data(i).reldate_peak),'smooth.eps');
	saveas(fig_polarizedflux(i), filename_fig_polarizedflux, 'epsc');
	eval(['!epstopdf ' filename_fig_polarizedflux]);
	close(fig_polarizedflux(i))
end
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%



%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%external data vs 5400 plot and external data vs 6150 plot compared two panel

%might want to move this to plotting prep code
%calculate relative to peak dates for the external data
for i=1:size(data_ext,2)
	for j=1:size(data_ext(i).contpoldate,2)
		data_ext(i).contpolreldate_peak(j) = data_ext(i).contpoldate{j} - data_ext(i).peakmagdatejd;
	end
end

%find the closest continuum region to use on this plot
for i=1:size(data_ext,2)
	data_ext(i).contpolrange_mean = cellfun(@mean, data_ext(i).contpolrange)
	for j=1:size(data_ext(i).contpoldate,2)
		temp_rangeindex = find(min(abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1))) == abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1)),1,'first');
		data_ext(i).contpolP_aprox_p1(j) = cell2mat(data_ext(i).contpolP(j,temp_rangeindex));
		data_ext(i).contpolP_aprox_p1_err(j) = cell2mat(data_ext(i).contpolPerr(j,temp_rangeindex));
		temp_rangeindex2 = find(min(abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda2(1))) == abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda2(1)),1,'first');
		data_ext(i).contpolP_aprox_p2(j) = cell2mat(data_ext(i).contpolP(j,temp_rangeindex2));
		data_ext(i).contpolP_aprox_p2_err(j) = cell2mat(data_ext(i).contpolPerr(j,temp_rangeindex));
	end
end

%zzzz need to 2009ip range pick

%manually edit one NaN value rather than editing whole code to handle nans
data_ext(5).contpolP_aprox_p1(1) = 0.84;
data_ext(5).contpolP_aprox_p1(2) = 1.73;
data_ext(5).contpolP_aprox_p1(3) = 0.72;
data_ext(5).contpolP_aprox_p1(4) = 0.69;
data_ext(5).contpolP_aprox_p1(5) = 0.64;
data_ext(5).contpolP_aprox_p1(6) = 0.41;
data_ext(5).contpolP_aprox_p1(end) = 0.56;
data_ext(5).contpolP_aprox_p1_err(1) = 0.12;
data_ext(5).contpolP_aprox_p1_err(2) = 0.05;
data_ext(5).contpolP_aprox_p1_err(3) = 0.06;
data_ext(5).contpolP_aprox_p1_err(4) = 0.03;
data_ext(5).contpolP_aprox_p1_err(5) = 0.09;
data_ext(5).contpolP_aprox_p1_err(6) = 0.04;
data_ext(5).contpolP_aprox_p1_err(end) = 0.06;




fig_external = figure;
set(gcf,'renderer','painters')
colormap jet
set(fig_external,'units','normalized','outerposition',[0 0 0.45 0.95]);
subtightplot(8,1,[1 2 3 4 ],[0.0,0.0],0.05,0.1)
for i=1:length(unique(datacontpol.name))
	%days since peak with continuum polarization binned at 5400A
	%special case of dotted line for the really noisy data point and replot it at the limit of the plot
	hold all
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	tempx = datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i))));
	tempy = 100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i))));
	er2_ISP(i) = errorbar(tempx(1),tempy(1),data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%er2_ISP(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),ones(size(datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))))).*data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	set([er2_ISP(i).Bar, er2_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er2_ISP(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er2_ISP(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er2_ISP(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er2_ISP(i).CapSize = 18;
	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er1(i).CapSize = 8;
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
end

set(gca,'box','on')
set(gca,'xticklabel',{[]})
ylabel('Continuum Polarization (\%) at 5400 $\AA$','interpreter','latex','FontSize',12','FontName','CMU Serif Roman')
axis([[-75 550] [0 6]])
set(gca,'FontSize',12)

%plot the external data
for i=1:size(data_ext,2)
	temp_snnameindex(i) = find(strcmp(data_ext(i).name,snnames_sorted)==1);
	if(temp_snnameindex>14)
		scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,colormatrix_sorted(temp_snnameindex(i),:),'h','filled');
	else
		%scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,data_proc(temp_snnameindex).colormatrix_sorted(1:3),'h','filled')
		scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,colormatrix_sorted(temp_snnameindex(i),:),'h','filled');
	end
end
[hleg gleg] = legend([sc1 scE(1:4) scE(6:7)],[snnames_sorted_mydata data_ext(1:4).name data_ext(6:7).name],'Location','northeast','FontSize',10);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
for i=1:(size(data_ext,2)-3)
	hleg.String{size(snnames_sorted_mydata,2)+i} = ['\color[rgb]{' num2str(colormatrix_sorted(temp_snnameindex(i),:)) '} ' hleg.String{size(snnames_sorted_mydata,2)+i}]
end
for i=6:7
	hleg.String{size(snnames_sorted_mydata,2)+i-1} = ['\color[rgb]{' num2str(colormatrix_sorted(temp_snnameindex(i),:)) '} ' hleg.String{size(snnames_sorted_mydata,2)+i-1}]
end
set(gleg_patch, 'Markersize', 11); %// set marker size as desired

subtightplot(8,1,[5 6 7 8],[0.03,0.075],0.05,0.1)

for i=1:length(unique(datacontpol.name))
	%days since peak with continuum polarization binned at 6150A
	%special case of dotted line for the really noisy data point and replot it at the limit of the plot
	hold all
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p2(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p2_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	tempx = datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i))));
	tempy = 100*datacontpol.p2(find(strcmp(datacontpol.name,snnames_sorted(i))));
	er2_ISP(i) = errorbar(tempx(1),tempy(1),data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%er2_ISP(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))),ones(size(datacontpol.p1(find(strcmp(datacontpol.name,snnames_sorted(i)))))).*data_proc(i).ISPlimit_fromNaID,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	set([er2_ISP(i).Bar, er2_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er2_ISP(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er2_ISP(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er2_ISP(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er2_ISP(i).CapSize = 18;
	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er1(i).CapSize = 8;
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p2(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),100*datacontpol.p2(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
end

set(gca,'box','on')
%set(gca,'xticklabel',{[]})
ylabel('Continuum Polarization (\%) at 6150 $\AA$','interpreter','latex','FontSize',12','FontName','CMU Serif Roman')
xlabel('Days Relative to Peak','interpreter','latex','FontSize',12,'FontName','CMU Serif Roman')
axis([[-75 550] [0 6]])
set(gca,'FontSize',12)

%plot the external data
for i=1:size(data_ext,2)
	temp_snnameindex(i) = find(strcmp(data_ext(i).name,snnames_sorted)==1);
	scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p2,150,colormatrix_sorted(temp_snnameindex(i),:),'h','filled');
	
end
[hleg gleg] = legend([sc1 scE(1:4) scE(6:7)],[snnames_sorted_mydata data_ext(1:4).name data_ext(6:7).name],'Location','northeast','FontSize',10);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
for i=1:(size(data_ext,2)-3)
	hleg.String{size(snnames_sorted_mydata,2)+i} = ['\color[rgb]{' num2str(colormatrix_sorted(temp_snnameindex(i),:)) '} ' hleg.String{size(snnames_sorted_mydata,2)+i}]
end
for i=6:7
	hleg.String{size(snnames_sorted_mydata,2)+i-1} = ['\color[rgb]{' num2str(colormatrix_sorted(temp_snnameindex(i),:)) '} ' hleg.String{size(snnames_sorted_mydata,2)+i-1}]
end
set(gleg_patch, 'Markersize', 11); %// set marker size as desired

filename_fig_external = strcat(figuredirectory,'TypeIInSPOL_single\P1P2_literature.eps');
saveas(fig_external, filename_fig_external, 'epsc');
eval(['!epstopdf ' filename_fig_external]);
close(fig_external)

%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%




%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%

%theta
fig_theta12 = figure;
set(gcf,'renderer','painters')
colormap jet
set(fig_theta12,'units','normalized','outerposition',[0 0 0.45 0.95]);
subtightplot(8,1,[1 2 3 4 ],[0.0,0.0],0.05,0.1)
for i=1:length(unique(datacontpol.name))
	%days since peak with continuum thetea binned at 5400A
	hold all
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er1(i).CapSize = 18;
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
end

set(gca,'box','on')
set(gca,'xticklabel',{[]})
ylabel('Position Angle $\theta(^{\circ})$ at 5400 $\AA$','interpreter','latex','FontSize',12','FontName','CMU Serif Roman')
axis([[-75 550] [0 180]])
set(gca,'FontSize',12)

[hleg gleg] = legend(sc1,snnames_sorted_mydata,'Position',[0.52, 0.58, 0.25, 0.25],'FontSize',14);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
set(gleg_patch, 'Markersize', 16); %// set marker size as desired


subtightplot(8,1,[5 6 7 8],[0.03,0.075],0.05,0.1)
for i=1:length(unique(datacontpol.name))
	%days since peak with continuum theta binned at 6150A
	hold all
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t2(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t2_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	set([er1(i).Bar, er1(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [er1(i).Line.ColorData(1:3); 255*fade_alpha])
	set(er1(i).Cap, 'EdgeColorType', 'truecoloralpha', 'EdgeColorData', [er1(i).Cap.EdgeColorData(1:3); 255*fade_alpha])
	er1(i).CapSize = 18;
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t2(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t2(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
end

set(gca,'box','on')
%set(gca,'xticklabel',{[]})
ylabel('Position Angle $\theta(^{\circ})$ at 6150 $\AA$','interpreter','latex','FontSize',12','FontName','CMU Serif Roman')
xlabel('Days Relative to Peak','interpreter','latex','FontSize',12,'FontName','CMU Serif Roman')
axis([[-75 550] [0 180]])
set(gca,'FontSize',12)

[hleg gleg] = legend(sc1,snnames_sorted_mydata,'Position',[0.52, 0.14, 0.25, 0.25],'FontSize',14);
gleg_patch = findobj(gleg, 'type', 'patch'); %// objects of legend of type line
for i=1:size(snnames_sorted_mydata,2)
	hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' hleg.String{i}]
end
set(gleg_patch, 'Markersize', 16); %// set marker size as desired

filename_fig_theta12 = strcat(figuredirectory,'TypeIInSPOL_single\T1T2.esp');
saveas(fig_theta12, filename_fig_theta12, 'epsc');
eval(['!epstopdf ' filename_fig_theta12]);
close(fig_theta12)
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%
%%%%%%%%%%











	%sc1(i) = scatter(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','o');
	%sc2(i) = scatter(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','s');
	%sc3(i) = scatter(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','d');
	%
	%er1_ISP(i) = errorbar(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},ones(1,size(dataz.Kuipererr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er1_ISP(i).LineStyle = 'none';
	%er2_ISP(i) = errorbar(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,ones(1,size(dataz.Bokerr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er2_ISP(i).LineStyle = 'none';
	%er3_ISP(i) = errorbar(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,ones(1,size(dataz.MMTerr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er3_ISP(i).LineStyle = 'none';
	%
	%%er1_stat(i) = errorbar(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'Kuiper'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%%er2_stat(i) = errorbar(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'Bok'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3) ]);
	%%er3_stat(i) = errorbar(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'MMT'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%er1_stat(i).LineStyle = 'none';
	%er2_stat(i).LineStyle = 'none';
	%er3_stat(i).LineStyle = 'none';
	%pause(3)











%%%%%
%continuum polarization with external data as well plot 


%plot the external data
for i=1:size(data_ext,2)
	i
	data_ext(i).name
	colormatrix_sorted(temp_snnameindex,:)
	temp_snnameindex = find(strcmp(data_ext(i).name,snnames)==1);
end


[h1, lgd1] = legend(pl,unique(datacontpol.name),'FontSize', 24,'Location','NorthEastOutside');
lgd1_find = findobj(lgd1, 'type', 'line');
set(lgd1_find, 'LineWidth',12);
lgd1t = findobj(lgd1, 'type', 'text');
set(lgd1t, 'FontSize', 24,'Interpreter','latex');
for i=1:length(unique(datacontpol.name))
	set(lgd1_find(2*i-1), 'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
end	
ax1 = gca;
ax2 = axes('Position',get(ax1,'Position'),'YAxisLocation','right','XAxisLocation','top','Color','none','visible','off');

[~, objh]=legend(ax2,[sc1(4) sc2(4) sc3(4)],[string('Kuiper'),string('Bok'),string('MMT')],'FontSize', 20,'Location','NorthEast');
objhl = findobj(objh, 'type', 'patch'); %// objects of legend of type line
set(objhl, 'Markersize', 20); %// set marker size as desired

%calculate relative to peak dates for the external data
for i=1:size(data_ext,2)
	for j=1:size(data_ext(i).contpoldate,2)
		data_ext(i).contpolreldate_peak(j) = data_ext(i).contpoldate{j} - data_ext(i).peakmagdatejd;
	end
end

%find the closest continuum region to use on this plot
for i=1:size(data_ext,2)
	data_ext(i).contpolrange_mean = cellfun(@mean, data_ext(i).contpolrange)
	for j=1:size(data_ext(i).contpoldate,2)
		temp_rangeindex = find(min(abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1))) == abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1)),1,'first');
		data_ext(i).contpolP_aprox_p1(j) = cell2mat(data_ext(i).contpolP(j,temp_rangeindex));
	end
end

%manually edit one NaN value
data_ext(5).contpolP_aprox_p1(end) = 0.56





%%%%%polarization angle plot zzz

for i=1:length(unique(datacontpol.name))
	%days since peak
	%polarization in %
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),'-','LineWidth',1,'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	hold all
	%get this plot working, reduce data
	sc1(i) = scatter(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled',colormatrix_symbol(i));
	er1(i) = errorbar(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1(find(strcmp(datacontpol.name,snnames_sorted(i)))),datacontpol.t1_sig(find(strcmp(datacontpol.name,snnames_sorted(i)))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)])
	
	
	%sc1(i) = scatter(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','o');
	%sc2(i) = scatter(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','s');
	%sc3(i) = scatter(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,200,[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)],'filled','d');
	%
	%er1_ISP(i) = errorbar(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},ones(1,size(dataz.Kuipererr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er1_ISP(i).LineStyle = 'none';
	%er2_ISP(i) = errorbar(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,ones(1,size(dataz.Bokerr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er2_ISP(i).LineStyle = 'none';
	%er3_ISP(i) = errorbar(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,ones(1,size(dataz.MMTerr_pol{i},1)).* dataz.(['ISP_' char(datacontpol.name{i})]),'Color','k');
	%er3_ISP(i).LineStyle = 'none';
	%
	%%er1_stat(i) = errorbar(dataz.Kuiperdates{i},dataz.Kuipererr_pol{i},100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'Kuiper'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%%er2_stat(i) = errorbar(dataz.Bokdates{i}   ,dataz.Bokerr_pol{i}   ,100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'Bok'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3) ]);
	%%er3_stat(i) = errorbar(dataz.MMTdates{i}   ,dataz.MMTerr_pol{i}   ,100*datacontpol.contpolsig{1}(find(strcmp(datacontpol.name,snnames_sorted(i)) & strcmp(datacontpol.tel,'MMT'))),'Color',[colormatrix_sorted(i,1) colormatrix_sorted(i,2) colormatrix_sorted(i,3)]);
	%er1_stat(i).LineStyle = 'none';
	%er2_stat(i).LineStyle = 'none';
	%er3_stat(i).LineStyle = 'none';
	%pause(3)
end





set(gca,'box','on')
xlabel('Days Relative to Peak','interpreter','latex','FontSize',12,'FontName','CMU Serif Roman')
ylabel('Continuum Polarization Angle (theta) at 5400 $\AA$','interpreter','latex','FontSize',12,'FontName','CMU Serif Roman')
axis([[-75 550] [0 180]])
set(gca,'FontSize',12)














export_fig C:\Users\Cbilinski\Desktop\Figures\contpol{1}new.pdf










%contpolp plots using our data
clf
for i=1:length(unique(datacontpol.name))
	axis([[-100 200] [0 6]])
	
	%days since peak
	%polarization in %
	pl(i) = plot(datacontpol.reldate_peak(find(strcmp(datacontpol.name,snnames(i)))),100*datacontpol.p1(find(strcmp(datacontpol.name,snnames(i)))),'-','LineWidth',2,'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3) data_proc(i).colormatrix(4)]);
	hold all
	scK(i) = scatter(data_proc(i).Kuiperdates,data_proc(i).Kuiper_pol,200,[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)],'filled','o','MarkerFaceAlpha', data_proc(i).colormatrix(4),'MarkerEdgeAlpha', data_proc(i).colormatrix(4));
	scB(i) = scatter(data_proc(i).Bokdates   ,data_proc(i).Bok_pol   ,200,[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)],'filled','s','MarkerFaceAlpha', data_proc(i).colormatrix(4),'MarkerEdgeAlpha', data_proc(i).colormatrix(4));
	scM(i) = scatter(data_proc(i).MMTdates   ,data_proc(i).MMT_pol   ,200,[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)],'filled','d','MarkerFaceAlpha', data_proc(i).colormatrix(4),'MarkerEdgeAlpha', data_proc(i).colormatrix(4));
	
	erK_ISP(i) = errorbar(data_proc(i).Kuiperdates,data_proc(i).Kuiper_pol,ones(1,size(data_proc(i).Kuiper_pol,1)).* eval(['ISP_' char(snnames(i))]),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erK_ISP(i).LineStyle = 'none';
	set([erK_ISP(i).Bar, erK_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erK_ISP(i).Line.ColorData(1:3); 255*0.25]);
	erB_ISP(i) = errorbar(data_proc(i).Bokdates,data_proc(i).Bok_pol,ones(1,size(data_proc(i).Bok_pol,1)).* eval(['ISP_' char(snnames(i))]),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erB_ISP(i).LineStyle = 'none';
	set([erB_ISP(i).Bar, erB_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erB_ISP(i).Line.ColorData(1:3); 255*0.25]);
	erM_ISP(i) = errorbar(data_proc(i).MMTdates,data_proc(i).MMT_pol,ones(1,size(data_proc(i).MMT_pol,1)).* eval(['ISP_' char(snnames(i))]),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erM_ISP(i).LineStyle = 'none';
	set([erM_ISP(i).Bar, erM_ISP(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erM_ISP(i).Line.ColorData(1:3); 255*0.25]);
	
	erK_stat(i) = errorbar(data_proc(i).Kuiperdates,data_proc(i).Kuiper_pol,100*datacontpol.p1_sig(find(strcmp(datacontpol.name,snnames(i)) & strcmp(datacontpol.tel,'Kuiper'))),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erB_stat(i) = errorbar(data_proc(i).Bokdates   ,data_proc(i).Bok_pol   ,100*datacontpol.p1_sig(find(strcmp(datacontpol.name,snnames(i)) & strcmp(datacontpol.tel,'Bok'))),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erM_stat(i) = errorbar(data_proc(i).MMTdates   ,data_proc(i).MMT_pol   ,100*datacontpol.p1_sig(find(strcmp(datacontpol.name,snnames(i)) & strcmp(datacontpol.tel,'MMT'))),'Color',[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)]);
	erK_stat(i).LineStyle = 'none';
	erB_stat(i).LineStyle = 'none';
	erM_stat(i).LineStyle = 'none';
	set([erK_stat(i).Bar, erK_stat(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erK_stat(i).Line.ColorData(1:3); 255*0.25]);
	set([erB_stat(i).Bar, erB_stat(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erB_stat(i).Line.ColorData(1:3); 255*0.25]);
	set([erM_stat(i).Bar, erM_stat(i).Line], 'ColorType', 'truecoloralpha', 'ColorData', [erM_stat(i).Line.ColorData(1:3); 255*0.25]);

	%pause(1)
end

%calculate relative to peak dates for the external data
for i=1:size(data_ext,2)
	for j=1:size(data_ext(i).contpoldate,2)
		data_ext(i).contpolreldate_peak(j) = data_ext(i).contpoldate{j} - data_ext(i).peakmagdatejd;
	end
end

%find the closest continuum region to use on this plot
for i=1:size(data_ext,2)
	data_ext(i).contpolrange_mean = cellfun(@mean, data_ext(i).contpolrange)
	for j=1:size(data_ext(i).contpoldate,2)
		temp_rangeindex = find(min(abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1))) == abs(data_ext(i).contpolrange_mean(j,:)-datacontpol.lambda1(1)),1,'first');
		data_ext(i).contpolP_aprox_p1(j) = cell2mat(data_ext(i).contpolP(j,temp_rangeindex));
	end
end

%manually edit one NaN value
data_ext(5).contpolP_aprox_p1(end) = 0.56


%plot the external data
for i=1:size(data_ext,2)
	temp_snnameindex = find(strcmp(data_ext(i).name,snnames)==1);
	if(temp_snnameindex>14)
		scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,colormatrix_pool(temp_snnameindex,:),'h','filled')

	else
		scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,data_proc(temp_snnameindex).colormatrix(1:3),'h','filled')
	end
end


%%%%%
%run data_FW generating code

filename_data_FW = strcat(dataoutputdirectory,'data_FW_new.txt');

for i = 1:size(data,2)
	%data(i).flux_Halphacoretot = sum(data(i).flux_norm_conthalpha(data(i).indx_Halphapeak-1:data(i).indx_Halphapeak+1));
	data(i).name_nospace = data(i).name(find(~isspace((data(i).name))))
	results_FW = [num2str(data(i).vel_FW),' ',data(i).name_nospace,' ',data(i).tel,' ',num2str(data(i).reldate_peak),' '];
	dlmwrite(filename_data_FW,results_FW,'-append','delimiter','');
end

%this might not be needed since writing out this data is already in stored variables

[data_FW.FW data_FW.name data_FW.tel data_FW.reldate] = textread('..\data\data_FW_new.txt','%f %s %s %f','delimiter',' ');




















%figure
%blah = scatter(0,1,500,'filled')
%set(blah, 'MarkerFaceAlpha', 0.25, 'MarkerEdgeAlpha', 0.25)
%%[test1 test2] = legend(blah)
%test1= legend(blah)

%things to do: zzzzz
%fade only low epoch data
%tidy up polarization plot
%make P vs width and width vs time plots

%before and after ISP sub slope parameters
%histogram of slope populations? separate by early/late and no ISP sub/isp sub?


%2015bh data
%read new cikota paper from doug
%arxiv
%tidy up NaID (if changes, need to redo linear fits parameters)
%tidy up SN 2009ip choice for sure (probably good)
%axis limits especially for qrsp?
%read polarization book
%finish data checkup
%annotate observations that are cloudy/not included
%maybe try fitting to new 2017hcc ISP data
%code for handling 0 ISP estimate


%slopevstimefig_hleg = legend(snnames_sorted);
%
%slopevstimefig_hleg = legend(snnames_sorted);
%%slopevstimefig_chleg = get(slopevstimefig_hleg,'children')
%for i=1:size(snnames_sorted,1)
%	slopevstimefig_hleg.String{i} = ['\color[rgb]{' num2str(colormatrix_sorted(i,:)) '} ' slopevstimefig_hleg.String{i}]
%end
%
%
%
%
%




















































%%%%%
%old code

	%if(temp_snnameindex>14)
	%	scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,colormatrix_sorted(temp_snnameindex,:),'Marker','o','LineWidth',3)
	%
	%else
	%	scE(i) = scatter(data_ext(i).contpolreldate_peak,data_ext(i).contpolP_aprox_p1,150,colormatrix_sorted(temp_snnameindex,:),'Marker','o','LineWidth',3)
	%end



	%if(data_proc(find(strcmp(data(i).name_nows,[data_proc.name]))).numepochs < 4)
	%	%set(hand_scat(i), 'MarkerFaceAlpha', fade_alpha, 'MarkerEdgeAlpha', fade_alpha)
	%end
	
	
	
	%if(simcolorcount(i) == 0)
	%	colormatrix_symbol(i) = "o";
	%elseif(simcolorcount(i) == 1)
	%	colormatrix_symbol(i) = "s";
	%elseif(simcolorcount(i) == 2)
	%	colormatrix_symbol(i) = "d";
	%elseif(simcolorcount(i) == 3)
	%	colormatrix_symbol(i) = "p";
	%elseif(simcolorcount(i) == 4)
	%	colormatrix_symbol(i) = "h";
	%end


%solving for data.sizepoint scaling to be from size 5 to 1000 for the total range:
%1000 = max(p1)*alpha + beta
%5 = min(p1)*alpha + beta
%beta = (1000-5*max(datacontpol_ISPsub.p1)/min(datacontpol_ISPsub.p1)) / (1-max(datacontpol_ISPsub.p1)/min(datacontpol_ISPsub.p1)) = 3.9190
%alpha = (5 - beta) / min(datacontpol_ISPsub.p1)




%%test out the colors
%figure
%for i =1:size(colormatrix_pool,1)
%	hold all
%	scatter(i,i,700,[colormatrix_pool(i,1) colormatrix_pool(i,2) colormatrix_pool(i,3)],'filled')
%end
%
%%order colors to match better data
%colormatrix_sorted = colormatrix_pool([1 4 2 3 5 7 8 9 6 10 14 11 15 12 16 13 17 18],:);
%
%%fade alpha code if needed
%%for i=1:size(colormatrix_sorted,1)
%%	if(i>size(data_proc,2))
%%		colormatrix_sorted(i,4) = fade_alpha
%%	else
%%		if(data_proc(i).numepochs >= 4)
%%			colormatrix_sorted(i,4) = 1;
%%		else
%%			colormatrix_sorted(i,4) = fade_alpha
%%		end
%%	end
%%end





























	%fade alpha code
	%if(data_proc(i).numepochs > 3)
	%	data_proc(i).colormatrix = colormatrix_pool(j,:);
	%	data_proc(i).colormatrix = [data_proc(i).colormatrix 1];
	%	j=j+1;
	%else
	%	data_proc(i).colormatrix = colormatrix_pool(k+6,:);
	%	data_proc(i).colormatrix = [data_proc(i).colormatrix 0.25];
	%	k=k+1;
	%end




%snnames = [snnames_readin
%"SN1997eg"
%"SN1998S"
%"SN2006tf"
%"SN2013fs"];


%%remove sn2010jl other ISP thing manually for now, edit later zzz
%data(29).qISP = []
%data(29).uISP = []

%%match ISP fits to other data sets with the same name
%for i=1:size(data,2)
%	if(~isempty(data(i).qISP))
%		for j = 1:size(data,2)
%			if(~(i==j))
%				if(strcmp(data(i).name,data(j).name))
%					if(isempty(data(j).qISP))
%						data(j).qISP = data(i).qISP;
%						data(j).uISP = data(i).uISP;
%					end
%				end
%			end
%		end
%	end
%end
%

		%three point serkowski fit
		%fit_Serkowski(data(i).description,[data(i).qpred_narrow_Halpha data(i).qpred_narrow_Hbeta data(i).qpred_HeI5876],[data(i).upred_narrow_Halpha data(i).upred_narrow_Hbeta data(i).upred_HeI5876],[datacontpol.lambdaNHa(i) datacontpol.lambdaNHb(i) datacontpol.lambdaNHe(i)])
		
		%two point serkowski fit
		%fit_Serkowski(data(i).description,[data(i).qpred_narrow_Halpha data(i).qpred_narrow_Hbeta],[data(i).upred_narrow_Halpha data(i).upred_narrow_Hbeta],[datacontpol.lambdaNHa(i) datacontpol.lambdaNHb(i)])
	

%test1 = polyfit(data(26).wavedez((data(26).wavedez>4500)),100*data(26).q((data(26).wavedez>4500)),2)
%testval = polyval(test1,data(26).wavedez((data(26).wavedez>4500)))
%
%plot(data(26).wavedez((data(26).wavedez>4500)),100*data(26).q((data(26).wavedez>4500)))
%hold all
%plot(data(26).wavedez((data(26).wavedez>4500)),testval)
%axis([[4500 7000] [-3 3]])




%%use first 6 colors for the main data sets with many epochs
%j=1;
%k=1;
%for i=1:length(unique(datacontpol.name))
%	data_proc(i).numepochs = size(find(strcmp(datacontpol.name,snnames(i))),1);
%	
%	if(data_proc(i).numepochs > 3)
%		data_proc(i).colormatrix = colormatrix_pool(j,:);
%		data_proc(i).colormatrix = [data_proc(i).colormatrix 1];
%		j=j+1;
%	else
%		data_proc(i).colormatrix = colormatrix_pool(k+6,:);
%		data_proc(i).colormatrix = [data_proc(i).colormatrix 0.25];
%		k=k+1;
%	end
%end
%clear j;
%clear k;

% show colors for each object
%figure
%for i =1:size(data_proc,2)
%	hold all
%	scatter(i,i,500,[data_proc(i).colormatrix(1) data_proc(i).colormatrix(2) data_proc(i).colormatrix(3)],'filled','MarkerFaceAlpha',data_proc(i).colormatrix(4),'MarkerEdgeAlpha',data_proc(i).colormatrix(4))
%end



%for i=7:8
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%for i=9:10
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%for i=11
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%for i=12:15
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%for i=16:22
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%
%for i=23:27
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%for i=28
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%for i=29:39
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%for i=40:42
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%for i=43
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%for i=44:47
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%for i=48:49
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	data(i).sizepoint = datacontpol_ISPsub.p1(i)*10000;
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol_ISPsub.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
%
%
%%%%%
%use old P vs T code and adjust to new data


%for i=16
%	keyboard
%	data(i).name_nows = data(i).name;
%	data(i).name_nows(data(i).name_nows == ' ') = [];
%	data(i).fit_linearqRSP_filtered_confint = confint(data(i).fit_linearqRSP_filtered)
%	scatter(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,datacontpol.p1(i)*10000,colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:),'filled');	
%	errorbar(data(i).reldate_peak,data(i).fit_linearqRSP_filtered.p1,data(i).fit_linearqRSP_filtered_confint(1,1),data(i).fit_linearqRSP_filtered_confint(2,1),'Color',colormatrix_sorted(strcmp(data(i).name_nows,snnames_sorted),:))
%end
%
